{{- $myNS := lookup "v1" "Namespace" "" .Release.Namespace }}
{{- $etcd := index $myNS.metadata.annotations "namespace.cozystack.io/etcd" }}
{{- $ingress := index $myNS.metadata.annotations "namespace.cozystack.io/ingress" }}
{{- $host := index $myNS.metadata.annotations "namespace.cozystack.io/host" }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    cluster.x-k8s.io/cluster-name: '${CLUSTER_NAME}'
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.243.0.0/16
  controlPlaneRef:
    namespace: {{ .Release.Namespace }}
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
    kind: KamajiControlPlane
    name: {{ .Release.Name }}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: ProxmoxCluster
    name: {{ .Release.Name }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
kind: KamajiControlPlane
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    cluster.x-k8s.io/role: control-plane
  annotations:
    kamaji.clastix.io/kubeconfig-secret-key: "super-admin.svc"
spec:
  dataStoreName: "{{ $etcd }}"
  addons:
    coreDNS: {}
    konnectivity: {}
  kubelet:
    cgroupfs: systemd
    preferredAddressTypes:
    - InternalIP
    - ExternalIP
  network:
    serviceType: ClusterIP
    ingress:
      extraAnnotations:
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      hostname: {{ .Values.host | default (printf "%s.%s" .Release.Name $host) }}:443
      className: "{{ $ingress }}"
  deployment:
  replicas: 2
  version: 1.29.0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: ProxmoxCluster
metadata:
  annotations:
    cluster.x-k8s.io/managed-by: kamaji
    cluster.x-k8s.io/cluster-name: {{ .Release.Name }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  spec:
  controlPlaneEndpoint:
    host: {{ .Values.host | default (printf "%s.%s" .Release.Name $host) }}
    port: 443
  ipv4Config:
    addresses: ${NODE_IP_RANGES}
    prefix: ${IP_PREFIX}
    gateway: ${GATEWAY}
  dnsServers: ${DNS_SERVERS}
  allowedNodes: ${ALLOWED_NODES:=[]}

{{- range $groupName, $group := .Values.nodeGroups }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: {{ $.Release.Name }}-{{ $groupName }}
  namespace: {{ $.Release.Namespace }}
spec:
  template:
    spec:
      users:
        - name: root
          sshAuthorizedKeys: [${VM_SSH_KEYS}]
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            provider-id: "proxmox://'{{ ds.meta_data.instance_id }}'"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: ProxmoxMachineTemplate
metadata:
  name: {{ $.Release.Name }}-{{ $groupName }}
  namespace: {{ $.Release.Namespace }}
spec:
  template:
    spec:
      sourceNode: "${PROXMOX_SOURCENODE}"
      templateID: ${TEMPLATE_VMID}
      format: "qcow2"
      full: true
      numSockets: ${NUM_SOCKETS:=2}
      numCores: ${NUM_CORES:=4}
      memoryMiB: ${MEMORY_MIB:=16384}
      disks:
        bootVolume:
          disk: ${BOOT_VOLUME_DEVICE}
          sizeGb: ${BOOT_VOLUME_SIZE:=100}
      network:
        default:
          bridge: ${BRIDGE}
          model: virtio
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{ $.Release.Name }}-{{ $groupName }}
  namespace: {{ $.Release.Namespace }}
  annotations:
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "{{ $group.minReplicas }}"
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "{{ $group.maxReplicas }}"
    capacity.cluster-autoscaler.kubernetes.io/memory: "{{ $group.resources.memory }}"
    capacity.cluster-autoscaler.kubernetes.io/cpu: "{{ $group.resources.cpu }}"
spec:
  clusterName: {{ $.Release.Name }}
  template:
    spec:
      clusterName: {{ $.Release.Name }}
      version: v1.29.0
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: {{ $.Release.Name }}-{{ $groupName }}
          namespace: default
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: ProxmoxMachineTemplate
        name: {{ $.Release.Name }}-{{ $groupName }}
        namespace: default
{{- end }}
