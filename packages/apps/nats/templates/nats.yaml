{{- $passwords := dict }}
{{- range $user, $u := .Values.users }}
  {{- if $u.password }}
    {{- $_ := set $passwords $user $u.password }}
  {{- else if not (index $passwords $user) }}
    {{- $_ := set $passwords $user (randAlphaNum 16) }}
  {{- end }}
{{- end }}

{{- if .Values.users }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-credentials
stringData:
  {{- range $user, $u := .Values.users }}
  {{ quote $user }}: {{ quote (index $passwords $user) }}
  {{- end }}
{{- end }}

---

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: {{ .Release.Name }}-system
spec:
  chart:
    spec:
      chart: cozy-nats
      reconcileStrategy: Revision
      sourceRef:
        kind: HelmRepository
        name: cozystack-system
        namespace: cozy-system
      version: '*'
  interval: 1m0s
  timeout: 5m0s
  values:
    nats:
      fullnameOverride: {{ .Release.Name }}
      config:
        {{- if or (gt (len $passwords) 0) (gt (len .Values.config.merge) 0) }}
        merge:
          {{- if gt (len $passwords) 0 }}
          accounts:
            A:
              users:
                {{- range $username, $password := $passwords }}
                - user: "{{ $username }}"
                  password: "{{ $password }}"
                {{- end }}
          {{- end }}
          {{- if and .Values.config (hasKey .Values.config "merge") }}
          {{ toYaml .Values.config.merge | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if and .Values.config (hasKey .Values.config "resolver") }}
        resolver:
          {{ toYaml .Values.config.resolver | nindent 12 }}
        {{- end }}
        cluster:
          enabled: true
          replicas: {{ .Values.replicas }}
        monitor:
          enabled: true
        jetstream:
          enabled: true
          fileStore:
            enabled: {{ .Values.jetstream.enabled }}
            pvc:
              enabled: true
              size: {{ .Values.jetstream.size }}
              {{- with .Values.storageClass }}
              storageClassName: {{ . }}
              {{- end }}
      promExporter:
        enabled: true
        podMonitor:
          enabled: true
      {{- if .Values.external }}
      service:
        merge:
          spec:
            type: LoadBalancer
      {{- end }}
