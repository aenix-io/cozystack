{{- $myNS := lookup "v1" "Namespace" "" .Release.Namespace }}
{{- $ingress := index $myNS.metadata.annotations "namespace.cozystack.io/ingress" }}
{{- $host := index $myNS.metadata.annotations "namespace.cozystack.io/host" }}
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: {{ .Release.Name }}-system
spec:
  chart:
    spec:
      chart: cozy-seaweedfs
      reconcileStrategy: Revision
      sourceRef:
        kind: HelmRepository
        name: cozystack-system
        namespace: cozy-system
      version: '*'
  interval: 1m0s
  timeout: 5m0s
  values:
    global:
      serviceAccountName: "{{ .Release.Namespace }}-seaweedfs"

    seaweedfs:
      
      volume:
        replicas: {{ .Values.replicas }}

        # TODO: workaround for non-working online resize
        podAnnotations:
          volume-size: "{{ .Values.size }}"
      
        dataDirs:
        - name: data1
          type: "persistentVolumeClaim"
          size: "{{ .Values.size }}"
          {{- with .Values.storageClass }}
          storageClass: {{ . }}
          {{- end }}
          maxVolumes: 0

      filer:
        s3:
          domainName: {{ .Values.host | default (printf "s3.%s" $host) }}
      
      s3:
        ingress:
          className: {{ $ingress }}
          host: {{ .Values.host | default (printf "s3.%s" $host) }}
          annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            acme.cert-manager.io/http01-ingress-class: {{ $ingress }}
            cert-manager.io/cluster-issuer: letsencrypt-prod
          tls:
            - hosts:
              - {{ .Values.host | default (printf "s3.%s" $host) }}
              secretName: {{ .Release.Name }}-s3-ingress-tls

      cosi:
        driverName: "{{ .Release.Namespace }}.seaweedfs.objectstorage.k8s.io"
        bucketClassName: "{{ .Release.Namespace }}"
