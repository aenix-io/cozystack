{{- range .Values.metricsStorages }}
---
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMCluster
metadata:
  name: {{ .name }}
spec:
  replicationFactor: 2
  retentionPeriod: {{ .retentionPeriod | quote }}
  vminsert:
    replicaCount: 2
    resources:
      limits:
        {{- with . | dig "vminsert" "resources" "limits" "cpu" nil }}
        cpu: {{ . | quote }}
        {{- end }}
        memory: {{ . | dig "vminsert" "resources" "limits" "memory" "1000Mi" }}
      requests:
        cpu: {{ . | dig "vminsert" "resources" "requests" "cpu" "500m" }}
        memory: {{ . | dig "vminsert" "resources" "requests" "memory" "500Mi" }}
  vmselect:
    replicaCount: 2
    resources:
      limits:
        # if we don't set the cpu limit, victoriametrics-operator will set 500m here, which is ridiculous small
        # see internal/config/config.go in victoriametrics-operator
        # 2 vcpu is the bare minimum for **single** Grafana user
        cpu: {{ . | dig "vmselect" "resources" "limits" "cpu" "2000m" }}
        memory: {{ . | dig "vmselect" "resources" "limits" "memory" "1000Mi" }}
      requests:
        cpu: {{ . | dig "vmselect" "resources" "requests" "cpu" "500m" }}
        memory: {{ . | dig "vmselect" "resources" "requests" "memory" "500Mi" }}
    extraArgs:
      search.maxUniqueTimeseries: "600000"
      vmalert.proxyURL: http://vmalert-{{ .name }}.{{ $.Release.Namespace }}.svc:8080
      dedup.minScrapeInterval: {{ .deduplicationInterval | quote}}
    cacheMountPath: /select-cache
    storage:
      volumeClaimTemplate:
        spec:
          {{- with .storageClassName }}
          storageClassName: {{ . }}
          {{- end }}
          resources:
            requests:
              storage: 2Gi
  vmstorage:
    replicaCount: 2
    resources:
      limits:
        {{- with . | dig "vmstorage" "resources" "limits" "cpu" nil }}
        cpu: {{ . | quote }}
        {{- end }}
        memory: {{ . | dig "vmstorage" "resources" "limits" "memory" "2048Mi" }}
      requests:
        cpu: {{ . | dig "vmstorage" "resources" "requests" "cpu" "100m" }}
        memory: {{ . | dig "vmstorage" "resources" "requests" "memory" "500Mi" }}
    storage:
      volumeClaimTemplate:
        spec:
          {{- with .storageClassName }}
          storageClassName: {{ . }}
          {{- end }}
          resources:
            requests:
              storage: {{ .storage }}
    storageDataPath: /vm-data
---
apiVersion: cozystack.io/v1alpha1
kind: WorkloadMonitor
metadata:
  name: {{ .name }}-vmstorage
spec:
  replicas: 2
  minReplicas: 1
  kind: monitoring
  type: vmstorage
  selector:
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/instance: {{ .name }}
    app.kubernetes.io/name: vmstorage
  version: {{ $.Chart.Version }}
---
apiVersion: cozystack.io/v1alpha1
kind: WorkloadMonitor
metadata:
  name: {{ .name }}-vmselect
spec:
  replicas: 2
  minReplicas: 1
  kind: monitoring
  type: vmselect
  selector:
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/instance: {{ .name }}
    app.kubernetes.io/name: vmselect
  version: {{ $.Chart.Version }}
---
apiVersion: cozystack.io/v1alpha1
kind: WorkloadMonitor
metadata:
  name: {{ .name }}-vminsert
spec:
  replicas: 2
  minReplicas: 1
  kind: monitoring
  type: vminsert
  selector:
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/instance: {{ .name }}
    app.kubernetes.io/name: vminsert
  version: {{ $.Chart.Version }}
{{- end }}
